// *****************************************************************************************************************

// - створити функцію яка виводить масив
//
// function f1(a1, a2, a3) {
//           let mas = [a1, a2, a3];
//     console.log(mas);
// }
//
// f1('ku',3,[2,'42']);

// *******************************************************************************************************************

// - створити функцію яка заповнює масив рандомними числами та виводить його. Для виведення використати
// попвередню функцію.

// function f1(length, min, max) {
//     let mas = [];
//     for (let i = 0; i < length; i++) {
//         let rand = Math.floor(Math.random()*(max-min)+min);
//         mas.push(rand);
//     }
//     console.log(mas);
// }
//
// f1(10,1,1000);
// f1(10,1,1000);
// f1(10,1,1000);
// f1(10,1,1000);
// f1(10,1,1000);
// f1(10,1,1000);
// f1(10,1,1000);
// f1(10,1,1000);

// ****************************************************************************************************************

// - створити функцію яка приймає три числа та виводить та повертає найменьше.

// let f3 = (number1,number2,number3) => {
//     if (number1<=number2 && number1<=number3) {
//         console.log(number1);
//     }
//     if (number2<=number1 && number2<=number3) {
//         console.log(number2);
//     }
//     if (number3<=number2 && number3<=number1) {
//         console.log(number3);
//     }
// }
//
// f3(10,100,1000);
// f3(10,10,10);
// f3(10,10,100);
// f3(100,10,10);
// f3(1000,100,10);
// f3(100,10,1000);

// ****************************************************************************************************************

// - створити функцію яка приймає три числа та виводить та повертає найбільше.

// ******************************************************************************************************************

// - створити функцію яка приймає будь-яку кількість чисел, повертає найменьше, а виводить найбільше



// function f4() {
//     let max = arguments[0];
//     let min = arguments[0];
//     for (let argument of arguments) {
//         if (argument>max){
//             max = argument
//         }
//         if (argument<min){
//             min = argument
//         }
//     }
//     console.log(max);
//     return min;
// }
// const min = f4(6, 5, 55, 98, 23, 45, 1000, 1, -5, 4);
//
// console.log(min);

// ******************************************************************************************************************

// - створити функцію яка виводить масив

// function f5() {
//    let arr = [];
//     for (let argument of arguments) {
//         arr.push(argument);
//     }
//     console.log(arr);
// }
//
// f5('sag',34,43,32,56,45,234,'gkglllh');

// *****************************************************************************************************************

// - створити функцію яка повертає найбільше число з масиву

// function f6() {
//     let max = arguments[0];
//     for (let number of arguments) {
//         if (number > max) {
//             max = number
//         }
//
//     }
//     return max
//
// }
//
// let max = f6(67,78,89,90,7654,74,76,12,1,-3);
// console.log(max);

// *****************************************************************************************************************
// - створити функцію яка повертає найменьше число з масиву
// *******************************************************************************************************************
// - створити функцію яка приймає масив чисел та складає значення елементів масиву та повертає його.

// let f7 = (array) => {
//     let suma = 0;
//     for (let number of array) {
//         suma += number
//     }
//     return suma;
// }
//
// console.log(f7([12, 23, 34, 45, 56, 67, 78, 89, 90, 3]));

// ********************************************************************************************************************

// - створити функцію яка приймає масив чисел та повертає середнє арифметичне його значень.
//
// let f8 = (array) => {
//     let suma = 0;
//     for (let number of array) {
//         suma += number
//     }
//     let seredne = suma/array.length;
//     return seredne;
// }
//
// console.log(f8([12, 23, 34, 45, 56, 67, 78, 89, 90, 3]));

// ******************************************************************************************************************

// - Створити функцію яка приймає масив будь яких объектів, та повертає значення кількості об'єктів в масиві

// let arr = (array) => {
//     return array.length;
// }
//
// console.log(arr([1,1,1,1,1,1,'mcrrmc', 43,54]));

// ******************************************************************************************************************

// - Створити функцію яка приймає масив будь яких объектів, та повертає загальн кількість полів в них

// let arr = (array) => {
//     let sum_obj = 0
//     for (let object of array) {
//         let k = Object.keys(object)
//         sum_obj += k.length;
//     }
//     return sum_obj;
// }
//
// console.log(arr([{a:1},{a:2, b:3},{a:4, b:5, c:6},{a:7, b:543, c:9, d: 10},{a:11, b:12, c:13, d:14, e:4343}]));

// ********************************************************************************************************************

// - створити функцію  яка скаладає значення елементів з однаковими індексами  та повертає новий результуючий масив.
//     Приклад
//     [1,2,3,4]
//     [2,3,4,5]
// результат
//     [3,5,7,9]
//
// function f11(arr1, arr2) {
// let sum = [];
//     for (let i = 0; i < arr1.length; i++) {
//         sum.push(arr1[i] + arr2[i])
//     }
//     return sum;
// }
//
// console.log(f11([3, 4, 5, 6], [7, 6, 5, 4]));

// *******************************************************************************************************************

// - *** приймає масив та число "i", та міняє місцями об`єкт який знаходиться в індексі "i" на "i+1"

// function f12(arr, i) {
//     const a = arr[i];
//     arr[i] = arr[i+1]
//     arr[i+1] = a;
//     return arr;
// }
//
// console.log(f12([1, 3, 2, 4,], 1));

// *******************************************************************************************************************

// - *** створити функцію яка буде переносити елементи з значенням 0 у кінець маисву. Зберігаючи при
// цьому порядок не нульових значень.
// Двожина масиву від 2 до 100
// Приклад
// [1,0,6,0,3] => [1,6,3,0,0]
// [0,1,2,3,4] => [1,2,3,4,0]
// [0,0,1,0]   => [1,0,0,0]
//
// function f13(array) {
//     for (let i = 0; i < array.length; i++) {
//         if (array[i] === 0) {
//             array.push(array[i]);
//             array.splice(i,1);
//         }
//     }
//     return array;
// }
//
// console.log(f13([0, 1, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10]));

// ******************************************************************************************************************

// Створити функцію яка :
// - Додає в боді блок з текстом "Hello owu"
//
// function f14(text) {
// document.body.innerText = text;
// }
//
// console.log(f14('Hello owu!'));

// ********************************************************************************************************************

// - Додає в боді елемент з текстом . Тип елементу та текст отримати через аргументи
//
// function f15(teg, text) {
// let element = document.createElement(teg);
// element.innerText = text;
// document.body.appendChild(element);
// }
//
// console.log(f15('div', 'Staaaasss!'));

// *******************************************************************************************************************

// - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно
// додати список цих автомобілів.
// Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали. Всі
// властивості авто в обному блоці

// function f15(arr_car, tag) {
//     for (let i = 0; i < arr_car.length; i++) {
//         let div = document.createElement('div');
//         document.body.appendChild(div);
//         let tag1 = document.createElement(tag);
//         div.appendChild(tag1);
//         let car = JSON.stringify(arr_car[i]);
//         tag1.innerText = car;
//     }
// }
//
// console.log(f15([
//     {model: 'X1', year: '2001', moshch: 1, color: '#100000', driver: {sex: 'femel', age: 22, name: 'Angela'}},
//     {model: 'X2', year: '2002', moshch: 2, color: '#200000', driver: {sex: 'man', age: 21, name: 'Vitia'}},
//     {model: 'X3', year: '2003', moshch: 3, color: '#300000', driver: {sex: 'femel', age: 23, name: 'Ira'}},
//     {model: 'X4', year: '2004', moshch: 4, color: '#400000', driver: {sex: 'man', age: 24, name: 'Petro'}},
//     {model: 'X5', year: '2005', moshch: 5, color: '#500000', driver: {sex: 'femel', age: 25, name: 'Alina'}},
//     {model: 'X6', year: '2006', moshch: 6, color: '#600000', driver: {sex: 'man', age: 26, name: 'Roma'}},
//     {model: 'X7', year: '2007', moshch: 7, color: '#700000', driver: {sex: 'femel', age: 27, name: 'Vita'}},
//     {model: 'X8', year: '2008', moshch: 8, color: '#800000', driver: {sex: 'man', age: 28, name: 'Andron'}},
//     {model: 'X19', year: '20019', moshch: 19, color: '#900000', driver: {sex: 'femel', age: 29, name: 'Oksana'}},
//     {model: 'X10', year: '20010', moshch: 10, color: '#999000', driver: {sex: 'man', age: 20, name: 'Leonid'}},
// ], 'h1'));

// ***********************************************************************************************************

// - приймає масив автомобілів (можна взяти з попередніх дз ),та  індентифікатор елемнту в який потрібно додати
// список цих автомобілів.
// Для кожного автомобіля створити свій блок, та додати його в елемент, індентифікатор якого ви отримали.
// Для кожної властивості створити всередені блока автомоблія свій блок
//
// function f15(arr_car, id_el) {
//     let idha = document.getElementById(id_el);
//     for (let i = 0; i < arr_car.length; i++) {
//         let div = document.createElement('div');
//         idha.appendChild(div);
//         let car = JSON.stringify(arr_car[i]);
//         div.innerText = car;
//     }
// }
//
// console.log(f15([
//     {model: 'X1', year: '2001', moshch: 1, color: '#100000', driver: {sex: 'femel', age: 22, name: 'Angela'}},
//     {model: 'X2', year: '2002', moshch: 2, color: '#200000', driver: {sex: 'man', age: 21, name: 'Vitia'}},
//     {model: 'X3', year: '2003', moshch: 3, color: '#300000', driver: {sex: 'femel', age: 23, name: 'Ira'}},
//     {model: 'X4', year: '2004', moshch: 4, color: '#400000', driver: {sex: 'man', age: 24, name: 'Petro'}},
//     {model: 'X5', year: '2005', moshch: 5, color: '#500000', driver: {sex: 'femel', age: 25, name: 'Alina'}},
//     {model: 'X6', year: '2006', moshch: 6, color: '#600000', driver: {sex: 'man', age: 26, name: 'Roma'}},
//     {model: 'X7', year: '2007', moshch: 7, color: '#700000', driver: {sex: 'femel', age: 27, name: 'Vita'}},
//     {model: 'X8', year: '2008', moshch: 8, color: '#800000', driver: {sex: 'man', age: 28, name: 'Andron'}},
//     {model: 'X19', year: '20019', moshch: 19, color: '#900000', driver: {sex: 'femel', age: 29, name: 'Oksana'}},
//     {model: 'X10', year: '20010', moshch: 10, color: '#999000', driver: {sex: 'man', age: 20, name: 'Leonid'}},
// ], 'caaar'));

// ******************************************************************************************************************

// (на основі минулого ДЗ)
// **- функція приймає 2 масиви з рівною кількістю об'єктів та з'єднює в один об'єкт користувача та місто з
// відповідними "id" та "user_id",
// та повертає масив цих з'єднаних об'єктів.
// Приклад масивів:
//             let usersWithId = [
//             {id: 1, name: 'vasya', age: 31, status: false},
//             {id: 2, name: 'petya', age: 30, status: true},
//             {id: 3, name: 'kolya', age: 29, status: true},
//             {id: 4, name: 'olya', age: 28, status: false},
//             ];
//             let citiesWithId = [
//             {user_id: 3, country: 'USA', city: 'Portland'},
//             {user_id: 1, country: 'Ukraine', city: 'Ternopil'},
//             {user_id: 2, country: 'Poland', city: 'Krakow'},
//             {user_id: 4, country: 'USA', city: 'Miami'},
//             ];

// function f17(arr1,arr2) {
//     for (let i = 0; i < arr1.length; i++) {
//         for (let j = 0; j < arr2.length; j++) {
//             if (arr1[i].id === arr2[j].user_id) {
//                 arr1[i].city = arr2[j];
//             }
//         }
//     }
//     return arr1;
// }
//
// console.log(f17([
//     {id: 1, name: 'vasya', age: 31, status: false},
//     {id: 2, name: 'petya', age: 30, status: true},
//     {id: 3, name: 'kolya', age: 29, status: true},
//     {id: 4, name: 'olya', age: 28, status: false},
// ], [
//     {user_id: 3, country: 'USA', city: 'Portland'},
//     {user_id: 1, country: 'Ukraine', city: 'Ternopil'},
//     {user_id: 2, country: 'Poland', city: 'Krakow'},
//     {user_id: 4, country: 'USA', city: 'Miami'},
// ]));

// ******************************************************************************************************************

// ***- беремо завдання з правилами з укроку №3 :
// Та робимо це функцією.При цьому правила отримувати через аргумент.
// Є масив котрий характеризує правила. Створити скрипт який ітерує цей масив, та робить з кожне
// правило в окремому блоці.
// При цому в блоці, номер правила записати в свій блок, текст правила записати в свій окремий блок.
// Результатом відпрацювання скріпта повинна бути структура яка міститься в блоці wrap файла rule.html
//
// 			let rules = [
// 				{
// 					title: 'Первое правило Бойцовского клуба.',
// 					body: 'Никому не рассказывать о Бойцовском клубе.'
// 				},
// 				{
// 					title: 'Второе правило Бойцовского клуба.',
// 					body: 'Никогда никому не рассказывать о Бойцовском клубе.'
// 				},
// 				{
// 					title: 'Третье правило Бойцовского клуба.',
// 					body: 'В схватке участвуют только двое.'
// 				},
// 				{
// 					title: 'Четвертое правило Бойцовского клуба.',
// 					body: 'Не более одного поединка за один раз.'
// 				},
// 				{
// 					title: 'Пятое правило Бойцовского клуба.',
// 					body: 'Бойцы сражаются без обуви и голые по пояс.'
// 				},
// 				{
// 					title: 'Шестое правило Бойцовского клуба.',
// 					body: 'Поединок продолжается столько, сколько потребуется.'
// 				},
// 				{
// 					title: 'Седьмое правило Бойцовского клуба.',
// 					body: `Если противник потерял сознание или делает вид, что потерял, или говорит
// 					«Хватит» — поединок окончен.`
// 				},
// 				{
// 					title: 'Восьмое и последнее правило Бойцовского клуба.',
// 					body: 'Новичок обязан принять бой.'
// 				},
//
// 			];

// function f18(rules) {
//
//     for (const rule of rules) {
//         let div = document.createElement('div');
//         div.style.backgroundColor = '#f58787'
//         let div_title = document.createElement('div');
//         let div_body = document.createElement('div');
//         document.body.appendChild(div);
//         div.appendChild(div_title);
//         div.appendChild(div_body);
//         let txt1 = rule.title;
//         div_title.innerText = txt1;
//         let txt2 = rule.body;
//         div_body.innerText = txt2;
//     }
//
// }
//
// f18([
//     {
//         title: 'Первое правило Бойцовского клуба.',
//         body: 'Никому не рассказывать о Бойцовском клубе.'
//     },
//     {
//         title: 'Второе правило Бойцовского клуба.',
//         body: 'Никогда никому не рассказывать о Бойцовском клубе.'
//     },
//     {
//         title: 'Третье правило Бойцовского клуба.',
//         body: 'В схватке участвуют только двое.'
//     },
//     {
//         title: 'Четвертое правило Бойцовского клуба.',
//         body: 'Не более одного поединка за один раз.'
//     },
//     {
//         title: 'Пятое правило Бойцовского клуба.',
//         body: 'Бойцы сражаются без обуви и голые по пояс.'
//     },
//     {
//         title: 'Шестое правило Бойцовского клуба.',
//         body: 'Поединок продолжается столько, сколько потребуется.'
//     },
//     {
//         title: 'Седьмое правило Бойцовского клуба.',
//         body: `Если противник потерял сознание или делает вид, что потерял, или говорит
// 					«Хватит» — поединок окончен.`
//     },
//     {
//         title: 'Восьмое и последнее правило Бойцовского клуба.',
//         body: 'Новичок обязан принять бой.'
//     },
//
// ]);

//*******************************************************************************************************************

// ===========додаткове від віктора========

// 1) Точная степень двойки.
// Дано натуральное число N.
// Выведите слово YES, если число N является точной степенью двойки,
// или слово NO в противном случае.
// Операцией возведения в степень пользоваться нельзя!
//
// 2) Deep Copy
// реалізувати глибоке копіювання обєкту за допомогою рекурсій
//
// 3) Flat
// Вирівняти багаторівневий масив в однорівневий
// [1,3, ['Hello, 'Wordd', [9,6,1]], ['oops'], 9] -> [1, 3, 'Hello, 'Wordd', 9, 6, 1, 'oops', 9]
// ===========додаткове========